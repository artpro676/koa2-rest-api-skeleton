---
swagger: '2.0'

info:
  version: v1
  title: Beam API
  x-logo:
    url: beamauthentic.png
  description: |
    The first version of the Beam API.
    
    ### We use next HTTP status codes:
    
    | Code | Explanation |
    |-----|-----|
    | 200 | Everything is working |
    | 201 | New resource is created |
    | 400 | Bad Request – The request was invalid or cannot be served |
    | 401 | Unauthorized – The request requires an user authentication or authentication header is invalid |
    | 403 | Forbidden – The server understood the request, but is refusing it or the access is not allowed |
    | 404 | Not found – There is no resource behind the URI |
    | 500 | Internal Server Error |


    ### Response format
    
    All errors in response have next format and HTTP status code is 400 or 404 or 500 (developerMessage is optional):

    ```json
    {
        "error": {
            "message": "Group is not found",
            "developerMessage": "More details about error for developer"
        }
    }
    ```

host: beamauthentic.com
basePath: /api/v1
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

# x-tagGroups:
#   - name: User Management
#     tags:
#       - auth
#   - name: Statistics
#     tags:
#       - auth





paths:

# Ping pong

  /api/ping:
    post:
      tags:
        - health
      summary: Check is beckend still alive
      description: ""
      operationId: ping
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
            description: He is alive.
            schema:
              description: ''
              type: string
              default: "pong"

        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"


# Login and else

  /api/v1/signin:
    post:
      tags:
        - auth
      summary: Signin a user by email and password
      description: ""
      operationId: signin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: data
          description: Account object
          required: true
          schema:
            $ref: "#/definitions/Auth"
      responses:
        "200":
            description: Authentication is successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/AuthAccount"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/signin/:provider:
    post:
      tags:
        - auth
      summary: Signin by Facebook/Twitter
      description: ""
      operationId: signin-social
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: query
          name: provider
          description: Provider name
          required: true
          type: string
          enum:
            - facebook
            - twitter
        - in: body
          name: data
          description: Account object
          required: true
          schema:
            $ref: "#/definitions/SocialAuth"
      responses:
        "200":
            description: Authentication is successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/AuthAccount"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/signup:
    post:
      tags:
        - auth
      summary: Signup a user.
      description: ""
      operationId: signin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: data
          description: Account object
          required: true
          schema:
            description: ''
            type: object
            properties:
              email:
                type: string
                required: true
              password:
                type: string
                required: true
              dob:
                type: string
      responses:
        "200":
            description: Authentication is successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/AuthAccount"


        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/signup/confirm:
    post:
      tags:
        - auth
      summary: Confirm signup.
      description: ""
      operationId: signin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: token
          description: Confirmation token
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        "200":
            description: Confirmation is successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: object
                  properties:
                    message:
                      type: string
                      default: "Ok, Try to signin"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/notification/disable:
    post:
      tags:
        - auth
      summary: Notifications disable.
      description: ""
      operationId: signin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: token
          description: Confirmation token
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        "200":
            description: Notifications disabled
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: object
                  properties:
                    message:
                      type: string
                      default: "Notifications disabled"
        "400":
            description: Refresh token is required
            schema:
              $ref: "#/definitions/Error"

  /api/v1/refresh_token:
    post:
      tags:
        - auth
      summary: Refresh auth token.
      description: ""
      operationId: refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: token
          description: Refresh token
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        "200":
            description: Refreshed successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: object
                  properties:
                    authToken:
                      type: string
                      description: 'New auth token'
                    refreshToken:
                      type: string
                      description: 'New refresh token'
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

# Account

  /api/v1/account:
    get:
      tags:
        - account
      summary: Get profile
      description: "Get profile of current user"
      operationId: get-profile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
      responses:
        "200":
            description: Successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/AuthAccount"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"
    put:
      tags:
        - account
      summary: Update profile
      description: "Update profile of current user"
      operationId: set-profile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: data
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
            description: Successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/User"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/account/picture/upload:
    post:
      tags:
        - account
      summary: Upload user picture.
      description: Create pre-signed url to upload user picture. Use it to put image on S3
      operationId: reset-pass
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
        - in: body
          name: data
          description: Image filename
          schema:
            description: 'Filename'
            type: object
            properties:
              name:
                type: string
      responses:
        "200":
            description: Successful
            schema:
              description: 'Use this url to put image on S3.'
              type: object
              properties:
                data:
                  type: object
                  properties:
                    link:
                      type: string
                    signature:
                      type: string

        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/account/reset_password/:email:
    post:
      tags:
        - account
      summary: Reset password
      description: ""
      operationId: reset-pass
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - name: email
          in: query
          description: User`s email.
          required: true
          type: string
      responses:
        "200":
            description: Successful request
            schema:
              description: ''
              type: object
              properties:
                data:
                  type: object
                  properties:
                    message:
                      type: string
                      default: "Please check your mailbox"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"

  /api/v1/account/set_password/:token:
    post:
      tags:
        - account
      summary: Set password
      description: ""
      operationId: reset-pass
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/contentTypeHeader"
        - name: token
          in: query
          description: Temporary reset token.
          required: true
          type: string
        - in: body
          name: password
          description: Object with password
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                default: "abracadabra"
      responses:
        "200":
            description: Password changes successfully
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/AuthAccount"
        "400":
            description: Email or password is wrong
            schema:
              $ref: "#/definitions/Error"



# Users

  /api/v1/user:
      get:
        tags:
          - User
        summary: Get a list of users
        description: ""
        operationId: user-list
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/contentTypeHeader"
          - $ref: "#/parameters/page"
          - $ref: "#/parameters/limit"
          - $ref: "#/parameters/where"
          - $ref: "#/parameters/search"
          - $ref: "#/parameters/order"
          - $ref: "#/parameters/fields"
          - $ref: "#/parameters/includeUser"
        responses:
          "200":
              description: Request is successful
              schema:
                description: ''
                type: object
                properties:
                  count:
                    type: integer
                  rows:
                    type: array
                    items:
                      $ref: "#/definitions/User"
          "401":
              description: Access token is invalid
              schema:
                $ref: "#/definitions/Error"
      post:
        tags:
          - User
        summary: Create user
        description: ""
        operationId: user-create
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/contentTypeHeader"
          - in: body
            name: data
            description: User object
            required: true
            schema:
              $ref: "#/definitions/User"

        responses:
          "200":
              description: Created successful
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: "#/definitions/User"
          "401":
              description: Access token is invalid
              schema:
                $ref: "#/definitions/Error"

  /api/v1/user/:id:
    get:
      tags:
        - User
      summary: Get a user by ID.
      description: "Each user could include : beams, beamDevices."
      operationId: user-one
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/fields"
        - $ref: "#/parameters/includeUser"
      responses:
        "200":
            description: Successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/User"
        "401":
            description: Access token is invalid
            schema:
              $ref: "#/definitions/Error"
    put:
      tags:
        - User
      summary: Update user
      description: ""
      operationId: user-update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
        - $ref: "#/parameters/id"
        - in: body
          name: data
          type: object
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
            description: Updated successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/User"
        "401":
            description: Access token is invalid
            schema:
              $ref: "#/definitions/Error"
    delete:
      tags:
        - User
      summary: Remove user
      description: ""
      operationId: user-remove
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/contentTypeHeader"
        - in: query
          name: data
          type: integer
          description: User ID
          required: true
          schema:
            description: 'Specific ID'
            type: integer
      responses:
        "200":
            description: Removed successful
            schema:
              description: ''
              type: object
              properties:
                data:
                  $ref: "#/definitions/User"
        "401":
            description: Access token is invalid
            schema:
              $ref: "#/definitions/Error"

  /api/v1/user/bulk/create:
      post:
        tags:
          - User
        summary: Bulk create user
        description: ""
        operationId: user-create-bulk
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/contentTypeHeader"
          - in: body
            name: data
            description: User object
            required: true
            schema:
              type: array
              items:
                $ref: "#/definitions/User"
        responses:
          "200":
              description: Authentication is successful
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        $ref: "#/definitions/User"

          "401":
              description: Access token is invalid
              schema:
                $ref: "#/definitions/Error"

  /api/v1/user/bulk/remove:
      post:
        tags:
          - User
        summary: Bulk remove user
        description: ""
        operationId: user-create-bulk
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/contentTypeHeader"
          - in: body
            name: id
            description: Array of specific user's id.
            required: true
            schema:
              type: object
              properties:
                id:
                  type: array
                  default: [1,2]
                  items:
                    type: number

        responses:
          "200":
              description: Users removed successful
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
          "401":
              description: Access token is invalid
              schema:
                $ref: "#/definitions/Error"

  /api/v1/user/bulk/status:
      put:
        tags:
          - User
        summary: Bulk update users statuses
        description: ""
        operationId: user-status
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/contentTypeHeader"
          - in: body
            name: data
            description: User ID
            required: true
            schema:
              description: 'Array of objects with field ID'
              type: object
              properties:
                id:
                  type: array
                  default: [5,6]
                  items:
                    data:
                      type: integer
                status:
                  type: string
                  description: 'enabled or disabled'
                  default: 'enabled'
        responses:
          "200":
              description: Updated is successful
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: "#/definitions/User"
          "401":
              description: Access token is invalid
              schema:
                $ref: "#/definitions/Error"








parameters:
  authHeader:
    in: header
    name: Authorization
    description: Access token
    required: true
    type: string
    format: Bearer xxx.yyy.zzz
  contentTypeHeader:
    in: header
    name: Content-type
    required: true
    type: string
    format: application/json
  id:
    in: query
    name: ID
    description: specific ID
    required: true
    type: integer
    default: 1
  where:
    in: query
    name: where
    description: Filtering by fields
    required: false
    type: json
    default: {"email": "@dummy.com"}
  search:
    in: query
    name: search
    description: Search by multiple fields
    required: false
    type: json
    default: {"email":"dummy","firstName":"dummy"}
  order:
    in: query
    name: order
    description: Ordering by fields
    required: false
    type: json
    default: {"createdAt": 1, id: -1}
  include:
    in: query
    name: include
    description: Load relations
    required: false
    type: array-json
    default: ["user"]
  includeBeam:
    in: query
    name: include
    description: Load relations
    required: false
    type: array-json
    default: ["user","categories"]
  includeBeamDevice:
    in: query
    name: include
    description: Load relations
    required: false
    type: array-json
    default: ["user","beams"]
  includeUser:
    in: query
    name: include
    description: Load relations
    required: false
    type: array-json
    default: ["appeals","beams","categories","interests"]
  fields:
    in: query
    name: fields
    description: Select attributes
    required: false
    type: array-json
    default: ["id", "name"]
  page:
    in: query
    name: page
    description: a page number
    required: false
    type: integer
    default: 1
  limit:
    in: query
    name: limit
    description: amount records on page
    type: integer
    required: false
    default: 10

definitions:
  Error:
    type: object
    properties:
      error:
        type: object
        properties:
          message:
            type: string
          developerMessage:
            type: string
  Auth:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
        minLength: 4
      device:
        type: object
        properties:
          uuid:
            type: string
          platform:
            type: string
            enum:
              - ios
              - android
  SocialAuth:
    type: object
    required:
      - email
      - token
    properties:
      email:
        type: string
      token:
        type: string
      secretToken:
        description: Only for twitter
        type: string
      device:
        type: object
        properties:
          uuid:
            type: string
          platform:
            type: string
            enum:
              - ios
              - android
  MobileDevice:
    type: object
    required:
      - uuid
      - platform
    properties:
      id:
        type: integer
      userId:
        type: integer
      uuid:
        type: string
      token:
        type: string
      platform:
        type: string
        enum:
          - ios
          - android
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time

  User:
    type: object
    properties:
      id:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      fullName:
        type: string
      description:
        type: string
      email:
        type: string
      address:
        type: string
      dob:
        type: string
        format: date-time
      role:
        type: string
        description: |
          |           |            |
          |-----------|------------|
          | super     | Super Admin|
          | admin     | Admin      |
          | publisher | Publisher  |
          | pending   | Pending    |
          | user      | User       |
        enum:
          - super
          - admin
          - pending_publisher
          - publisher
          - user
      status:
        type: string
        description: |
          |           |           |
          |-----------|-----------|
          | new       | New       |
          | enabled   | Enabled   |
          | disabled  | Disabled  |
        enum:
          - new
          - enabled
          - disabled
      gender:
        type: string
        enum:
          - male
          - female
      pictureName:
        type: string
      appealId:
        default: [1,2]
        type: array
      categoryId:
        default: [1,2]
        type: array
      interestId:
        default: [1,2]
        type: array
      asset:
        type: object
        properties:
          link:
            type: string
            default: "https://beam-asset-dev.s3.amazonaws.com/beams/1/image"
          signature:
            type: string
            default: "X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ3WYSXJZLCSWYX7Q%2F20170317%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20170317T141733Z&X-Amz-Expires=600&X-Amz-Signature=e8582d998abc2679dcdcc22836c6b319ca76a200f696bf7f6d984cc65f75f808&X-Amz-SignedHeaders=host"
      emailVerified:
        type: boolean
      enableNotification:
        type: boolean
      isPrivate:
        type: boolean
      lastBeamId:
        default: 1
        type: integer
      lastEventId:
        default: 1
        type: integer
      streamerId:
        default: 1
        type: integer
      followersCount:
        type: integer
        default: 1
        description: Count of followers
      followingsCount:
        type: integer
        default: 4
        description: Count of followings
      createdBeamsCount:
        type: integer
        default: 1
        description: Count of beams related to this profile
      savedBeamsCount:
        type: integer
        default: 1
        description: Count of beams saved to this profile
      allBeamsCount:
        type: integer
        default: 1
        description: Count of all beams related to this profile
      isFollowed:
        type: boolean
        default: 1
        description: Count of beams saved to this profile,
      blockedUserCount:
        type: integer
        default: 1
        description: Count of users blocked by specific user
      blockedBeamCount:
        type: integer
        default: 1
        description: Count of beams blocked by user
      onlineMobileDeviceCount:
        type: integer
        default: 1
        description: Count of connected mobile devices which could receive push notifications
      deleteDescription:
        type: string

      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  AuthToken:
    type: object
    properties:
      authToken:
        type: string
        default: "eyJhbGciOiJIU ... TaHm1fP7dr3b7AIYvNP0"
        description: JWT access token
      refreshToken:
        type: string
        default: "eyJhbGc-sdfdsf-TaHm1fP7dr-3b7AIYvNP0"
        description: Refresh token
  AuthAccount:
    allOf:
      - $ref: "#/definitions/User"
      - $ref: "#/definitions/AuthToken"